@frappe.whitelist(allow_guest=True)
def sign_up(email, full_name, first_name, last_name, gender, birth_date, social_media_guid=None, social_media_platform=None, phone_no=None, new_password=None):
    print(email, full_name, first_name, last_name, gender, birth_date)
    if is_signup_disabled():
        frappe.throw(_("Sign Up is disabled"), title=_("Not Allowed"))

    user = frappe.db.get("User", {"email": email})
    user_count = frappe.db.sql("""SELECT COUNT(*) from `tabUser` WHERE email = '{email}' OR mobile_no = '{mobile_no}'""".format(
        email=email,
        mobile_no=phone_no
    ))[0][0]

    if user_count > 0:
        return {
            'status_code': 200,
            'message': 'User already exists with this email or phone number'
        }
    else:
        if frappe.db.get_creation_count("User", 60) > 300:
            frappe.respond_as_web_page(
                _("Temporarily Disabled"),
                _("Too many users signed up recently, so the registration is disabled. Please try back in an hour"),
                http_status_code=429,
            )

        user = frappe.new_doc("User")
        user.update({
            "email": email,
            "first_name": first_name,
            "last_name": last_name,
            "full_name": escape_html(full_name),
            "gender": gender,
            "birth_date": birth_date,
            "enabled": 1,
            "new_password": new_password if new_password else random_string(10),
            "user_type": "System User",
            "role_profile_name": "notibell role profile"
        })

        is_table_already_exists = 0
        if social_media_platform:
            if social_media_guid:
                if user.get("social_logins"):
                    for media in user.get("social_logins"):
                        if media.provider==SOCAIL_MEDIA_PLATEFORM[social_media_platform]:
                            media.userid= social_media_guid
                            is_table_already_exists=1
                if  not is_table_already_exists:
                    user.append("social_logins", {
                        "provider": SOCAIL_MEDIA_PLATEFORM[social_media_platform],
                        "userid": social_media_guid
                    })
                    user.is_social_login = 1
                    user.is_verified = 1
                    user.new_password = "Qwerty@1234"
                    user.flags.ignore_permissions = True
                    user.flags.ignore_password_policy = True
                    user.send_welcome_email = False
                    user.save()

                    response = {
                        "is_social_login": 1,
                        "is_verified": 1
                    }

                    return {"status_code": 200, "message": "User signup successful", "response": response}
                else:
                    return {"status_code": 400, "message": "Please provide the social media GUID"}
            else:
                return {"status_code": 400, "message": "Please provide the social media GUID"}
        else:
            user.flags.ignore_permissions = True
            user.flags.ignore_password_policy = True
            user.insert()
            create_employee(user, doc=None)
            default_role = frappe.db.get_single_value("Portal Settings", "default_role")

            if default_role:
                user.add_roles(default_role)

            if user.flags.email_sent:
                return {
                    'status_code': 200,
                    'message': 'User registered successfully'
                }
            else:
                return {"status_code": 2, "message": _("Please ask your administrator to verify your sign-up")}


def create_employee(user, doc):
    try:
        print(user)
        employee = frappe.new_doc('Employee')
        employee.update({
            "full_name": user.full_name,
            "first_name": user.first_name,
            "last_name": user.last_name,
            "date_of_birth": user.birth_date,
            "gender": user.gender,
            "date_of_joining": frappe.utils.now_datetime(),
            "user_id": user.email
        })
        employee.flags.ignore_mandatory = True
        employee.insert(ignore_permissions=True)

        print(f"Employee {employee.employee_name} created successfully.")

    except Exception as e:
        print(f"Error creating employee: {str(e)}")
